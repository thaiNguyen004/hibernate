In this chapter
- Inheritance-mapping strategies
- Polymorphic associations

Chúng tôi đã có ý định không nói nhiều về ánh xạ kế thừa cho đến nay. Ánh xạ một tập hợp các lớp vào các bảng có thể
là một vấn đề phức tạp, và chúng tôi sẽ trình bày các chiến lược khác nhau trong chương này.

Một chiến lược cơ bản để ánh xạ các lớp vào các bảng cơ sở dữ liệu có thể là "một bảng cho mỗi lớp thực thể lưu trữ."
Tiếp cận này nghe có vẻ đơn giản và thực sự hoạt động tốt, cho đến khi chúng ta gặp phải kế thừa.

Kế thừa là một sự không phù hợp cấu trúc rất rõ ràng giữa thế giới hướng đối tượng và thế giới quan hệ, bởi vì hệ
thống hướng đối tượng mô hình cả mối quan hệ "là một" và "có một". Các mô hình dựa trên SQL chỉ cung cấp mối quan hệ
"có một"; các hệ thống quản lý cơ sở dữ liệu SQL không hỗ trợ kế thừa kiểu, và thậm chí khi nó có sẵn, thường là độc quyền
hoặc không hoàn chỉnh.

Có bốn chiến lược khác nhau để biểu diễn một cấu trúc kế thừa:
- Sử dụng một bảng cho mỗi lớp cụ thể và mặc định hành vi đa hình thời gian chạy.
- Sử dụng một bảng cho mỗi lớp cụ thể nhưng bỏ hoàn toàn mối quan hệ đa hình và kế thừa khỏi SQL schema.
Sử dụng truy vấn SQL UNION cho hành vi đa hình thời gian chạy.
- Sử dụng một bảng cho mỗi hệ thống phân cấp lớp (class hirarchy): kích hoạt đa hình bằng cách không chuẩn hóa mô hình SQL
và dựa vào sự phân biệt dựa trên hàng để xác định các super/subtypes.
- Sử dụng một bảng cho mỗi lớp con: biểu diễn các mối quan hệ "là một" (kế thừa) như các mối quan hệ "có một" (khóa ngoại),
và sử dụng các phép JOIN SQL.

Chương này tiếp cận từ trên xuống, giả định rằng bạn bắt đầu với một mô hình miền và đang cố gắng tạo ra một mô hình SQL mới.
Các chiến lược ánh xạ mô tả ở đây cũng đáng chú ý nếu bạn đang làm việc từ dưới lên, bắt đầu với các bảng cơ sở dữ liệu hiện có.
Chúng tôi sẽ chỉ ra một số mẹo dọc đường để giúp bạn xử lý các bố cục bảng không hoàn hảo.

