Việc tách chuỗi truy vấn ra ngoài giúp bạn lưu trữ tất cả các truy vấn liên quan đến một lớp bền vững cụ thể (hoặc một tập hợp các lớp)
cùng với thông tin dự liệu khác cho lớp đó. Hoặc bạn có thể gói các truy vấn của mình vào một tệp XML, độc lập với bất kỳ lớp Java nào.
Kỹ thuật này thường được ưa chuộng trong các ứng dụng lớn; cách thức duyệt hàng trăm truy vấn dễ dàng hơn khi chúng được
duy trì tại một vài vị trí biết trước thay vì rải rác trong mã nguồn trong các lớp khác nhau truy cập cơ sở dữ liệu.
Bạn trích dẫn và truy cập một truy vấn được tách ra bằng tên của nó.

14.4.1 Calling a named query

Phương thức EntityManager#getNamedQuery() thu được một thể hiện Query cho một truy vấn được đặt tên:

Query query = em.createNamedQuery("findItems");

Bạn cũng có thể thu được một thể hiện TypedQuery cho một truy vấn được đặt tên:

TypedQuery<Item> query = em.createNamedQuery("findItemById", Item.class);

API truy vấn của Hibernate cũng hỗ trợ truy cập các truy vấn được đặt tên:

org.hibernate.Query query = session.getNamedQuery("findItems");

Các truy vấn được đặt tên là toàn cầu - tức là tên của một truy vấn là một định danh duy nhất cho một persistence unit
cụ thể hoặc org.hibernate.SessionFactory. Cách và nơi chúng được xác định, trong các tệp XML hoặc chú thích, không phải
là vấn đề của mã ứng dụng của bạn.

Khi khởi động, Hibernate tải các truy vấn JPQL được đặt tên từ các tệp XML và/hoặc chú thích và phân tích chúng để xác
minh cú pháp của chúng. (Điều này hữu ích trong quá trình phát triển, nhưng bạn có thể muốn tắt kiểm tra này trong sản xuất
để tăng tốc quá trình khởi động, với thuộc tính cấu hình persistence unit hibernate.query.startup_check.)

Thậm chí ngôn ngữ truy vấn bạn sử dụng để viết một truy vấn được đặt tên cũng không quan trọng. Nó có thể là JPQL hoặc SQL.

14.4.2 Defining queries in XML metadata

Bạn có thể đặt một truy vấn được đặt tên trong bất kỳ phần tử <entity-mappings> JPA nào trong dự liệu orm.xml của bạn.
Trong các ứng dụng lớn, chúng tôi khuyên bạn nên tách biệt và phân tách tất cả các truy vấn được đặt tên vào một tệp riêng.
Hoặc bạn có thể muốn sử dụng cùng tệp ánh xạ XML để định nghĩa các truy vấn và một lớp cụ thể.

Phần tử <named-query> định nghĩa một truy vấn JPQL được đặt tên:

PATH: /model/src/main/resources/querying/ExternalizedQueries.xml

<entity-mappings
    version="2.1"
    xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm
        http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd">

    <named-query name="findItems">
        <query><![CDATA[
            select i from Item i
        ]]></query>
    </named-query>

</entity-mappings>

Bạn nên bọc văn bản truy vấn vào một chỉ thị CDATA để tránh bất kỳ ký tự nào trong chuỗi truy vấn của bạn có thể vô tình
được xem xét là XML (như toán tử nhỏ hơn) không gây hiểu nhầm cho trình phân tích XML. Chúng tôi bỏ CDATA khỏi hầu hết
các ví dụ khác để làm cho nó dễ đọc hơn.

Các truy vấn được đặt tên không cần được viết bằng JPQL. Chúng có thể thậm chí là các truy vấn SQL native - và mã Java
của bạn không cần biết sự khác biệt:

PATH: /model/src/main/resources/querying/ExternalizedQueries.xml

<named-native-query name="findItemsSQL"
                         result-class="org.jpwh.model.querying.Item">
    <query>select * from ITEM</query>
</named-native-query>

Điều này hữu ích nếu bạn nghĩ rằng bạn có thể muốn tối ưu hóa các truy vấn của mình sau này bằng cách điều chỉnh SQL
một cách tinh tế. Điều này cũng là một giải pháp tốt nếu bạn phải chuyển đổi một ứng dụng cổ điển sang JPA/Hibernate,
nơi mã SQL có thể được cô lập khỏi các quy trình JDBC được viết bằng tay. Với các truy vấn được đặt tên, bạn có thể dễ
dàng chuyển các truy vấn một cách từng bước vào các tệp ánh xạ.

[Hibernate Feature]

Hibernate cũng có cơ chế riêng, không tiêu chuẩn, để tách biệt truy vấn trong các tệp dữ liệu XML của Hibernate:

PATH: /model/src/main/resources/querying/ExternalizedQueries.hbm.xml

<?xml version="1.0"?>
<hibernate-mapping xmlns="http://www.hibernate.org/xsd/orm/hbm">
    <query name="findItemsOrderByAuctionEndHibernate">
        select i from Item i order by i.auctionEnd asc
    </query>

    <sql-query name="findItemsSQLHibernate">
        <return class="org.jpwh.model.querying.Item"/>
        select * from ITEM order by NAME asc
    </sql-query>
</hibernate-mapping>

Bạn sẽ thấy nhiều ví dụ hơn về việc tách biệt truy vấn, đặc biệt là các truy vấn SQL tùy chỉnh, sau này trong chương 17.
Nếu bạn không thích tệp XML, bạn có thể gói và đặt tên cho các truy vấn trong dữ liệu chú thích Java.

14.4.3 Defining queries with annotations

JPA hỗ trợ các truy vấn được đặt tên bằng các chú thích @NamedQuery và @NamedNativeQuery. Bạn chỉ có thể đặt những chú
thích này trên một lớp được ánh xạ. Lưu ý rằng tên truy vấn phải là duy nhất toàn cầu trong tất cả các trường hợp;
không có tên lớp hoặc gói nào tự động thêm vào trước tên truy vấn:

@NamedQueries({
    @NamedQuery(
        name = "findItemById",
        query = "select i from Item i where i.id = :id"
    )
})
@Entity
public class Item {
    // ...
}

Lớp được chú thích bằng @NamedQueries chứa một mảng các chú thích @NamedQuery. Một truy vấn đơn có thể được khai báo trực tiếp;
bạn không cần phải bọc nó trong @NamedQueries. Nếu bạn có một truy vấn SQL thay vì một truy vấn JPQL, hãy sử dụng chú thích
@NamedNativeQuery. Có nhiều tùy chọn để xem xét cho việc ánh xạ kết quả SQL, vì vậy chúng tôi sẽ chỉ bạn cách thực hiện
điều này sau này, trong một phần dành riêng trong chương 17.

[Hibernate Feature]

Rất tiếc, các chú thích truy vấn được đặt tên của JPA chỉ hoạt động khi chúng được đặt trên một lớp được ánh xạ.
Bạn không thể đặt chúng trong tệp dữ liệu package-info.java. Hibernate có một số chú thích độc quyền cho mục đích đó:

PATH: /model/src/main/java/org/jpwh/model/querying/package-info.java

@org.hibernate.annotations.NamedQueries({
    @org.hibernate.annotations.NamedQuery(
        name = "findItemsOrderByName",
        query = "select i from Item i order by i.name asc"
    )
})

package org.jpwh.model.querying;

Nếu cả tệp XML và chú thích đều không phải là nơi thích hợp để định nghĩa các truy vấn được đặt tên của bạn, bạn có
thể muốn xây dựng chúng bằng cách lập trình.

14.4.4 Defining named queries programmatically

Bạn có thể "lưu" một truy vấn dưới dạng truy vấn được đặt tên bằng cách sử dụng phương thức
EntityManagerFactory#addNamedQuery():

Query findItemsQuery = em.createQuery("select i from Item i");
em.getEntityManagerFactory().addNamedQuery(
    "savedFindItemsQuery", findItemsQuery
);
Query query =
em.createNamedQuery("savedFindItemsQuery");

Điều này đăng ký truy vấn của bạn với persistence unit, EntityManagerFactory và làm cho nó có thể được sử dụng lại
như một truy vấn được đặt tên. Truy vấn đã được lưu không nhất thiết phải là một câu lệnh JPQL; bạn cũng có thể lưu
truy vấn tiêu chí hoặc truy vấn SQL native. Thông thường, bạn đăng ký các truy vấn của mình một lần, khi khởi động ứng dụng của bạn.

Chúng tôi để lại quyết định cho bạn về việc sử dụng tính năng truy vấn được đặt tên. Tuy nhiên, chúng tôi xem xét chuỗi
truy vấn trong mã ứng dụng (trừ khi chúng nằm trong chú thích) là sự lựa chọn thứ hai; bạn nên luôn tách chuỗi truy vấn
ra ngoài nếu có thể. Trong thực tế, các tệp XML có lẽ là lựa chọn linh hoạt nhất.

Cuối cùng, đối với một số truy vấn, bạn có thể cần các thiết lập và gợi ý bổ sung.

